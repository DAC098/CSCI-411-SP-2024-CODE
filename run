#!/bin/bash

if [[ $3 == "rust" ]]; then
    cargo build -p $1 --release

    if (( $? != 0 )); then
        echo "failed to create main for $1"
        exit 0
    fi
elif [[ $3 == "rust-debug" ]]; then
    cargo build -p $1

    if (( $? != 0 )); then
        echo "failed to create debug main for $1"
        exit 0
    fi
else
    make $1

    if (( $? != 0 )); then
        echo "failed to create main for $1"
        exit 0
    fi
fi

run_cpp() {
    no_diff=false
    in_file="./${1}/tests/${2}.in"
    out_file="./${1}/tests/${2}.out"
    output="./${1}/main.output"
    main="./${1}/main"

    if [[ $3 == "rust" ]]; then
        main="./target/release/${1}"
    elif [[ $3 == "rust-debug" ]]; then
        main="./target/debug/${1}"
        no_diff=true
    fi

    if [[ ! -f $in_file ]]; then
        echo "input file not found: ${in_file}"
        return 1
    fi

    if [[ -f $out_file ]]; then
        if [[ $no_diff == true ]]; then
            cat $in_file | $main

            if (( $? != 0 )); then
                echo "non 0 return from main"

                return 1
            fi

            echo "----- expected output -----"
            cat $out_file
        else
            echo "checking ${2}"

            cat $in_file | $main > $output

            if (( $? != 0 )); then
                echo "non 0 return from main"
                cat $output

                return 1
            fi

            diff $out_file $output
        fi
    else
        echo "running ${1}"

        cat $in_file | $main
    fi

    return 0
}

if [[ $2 == "all" ]]; then
    for index in $(seq 1 100); do
        padded=$(printf %3s $index | tr ' ' 0)
        name="test_${padded}"

        run_cpp $1 $name $3

        if (( $? != 0 )); then
            echo "test ${name} failed"

            exit 1
        fi
    done
else
    run_cpp $1 $2 $3
fi
